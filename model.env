### Fichier MODÈLE vidé de toute information confidentielle : pour installer le bot, remplir tout et renommer le fichier en ".env"

# .env : fichier reprenant divers paramètres textuels pour le bot, qui seront considérées par Python comme des variables d'environnement grâce à l'appel à dotenv.loadenv() et seront donc accessibles via os.getenv("VALUE").
# Mettre ici :
#   - tout ce qui est confidentiel (tokens d'accès aux différentes API) ;
#   - ce qui est susceptible de changer d'une saison à l'autre et/ou est utilisé à plusieurs endroits (IDs de guilds/docs/webhooks...).

# TOUTES LES VARIABLES SONT DES CHAÎNES DE CARACTÈRES : ne PAS mettre des guillemets (ils seront intégrés à la chaîne), et penser à transformer les entiers/... stockés ici après l'appel à os.getenv.


# Base de données

SQLALCHEMY_DATABASE_URI = postgresql://user:password@host/base


# Discord

DISCORD_TOKEN =

DISCORD_GUILD_ID =
WEBHOOK_TP_URL = https://discordapp.com/api/webhooks/.../...



# Google Sheets
# RAPPEL : le doc doit être partagé avec <account@project.iam.gserviceaccount.com> (en tant qu'Éditeur) pour que le bot puisse lire et modifier les valeurs. Normalement, c'est le cas de tous les fichiers du Drive LG Rez.

TDB_SHEET_ID = <(dans l'URL du GSheets)>
ROLES_SHEET_ID =
DONNEES_SHEET_ID =


GSHEETS_CREDENTIALS = {"type": "service_account", "project_id": "<id>", "private_key_id": "<id>", "private_key": "-----BEGIN PRIVATE KEY-----\n<key>\n-----END PRIVATE KEY-----\n", "client_email": "account@project.iam.gserviceaccount.com", "client_id": "<id>", "auth_uri": "https://accounts.google.com/o/oauth2/auth", "token_uri": "https://oauth2.googleapis.com/token", "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs", "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/project.iam.gserviceaccount.com"}
