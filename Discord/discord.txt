Doc : https://discordpy.readthedocs.io/en/latest/index.html#

Code : https://github.com/loic-simon/lg-rez
	C'est le code général (toutes les fonctions qui interfaçaient Chatfuel, qui devront être modifiées) ; le code spécifique au bot est dans le dossier Discord


Le bot tourne en permanence sur la passerelle de la Rez. Les bases de données et le panneau d'admin sont sur alwaysdata.
Pour publier son code, il faut d'abord le transférer :
	Depuis la Rez uniquement (réseau local) :
		sshpass -p 'pas d'inspi' rsync -ri Discord/* lg-rez@10.0.0.1:~/www/Discord

	OU (après avoir ajouté sa clé publique SSH dans /home/lg-rez/.ssh/authorized_keys) :
		rsync -ri Discord/* lg-rez@82.226.127.88:~/www/Discord

	Pour Alwaysdata (maintenant INTERDIT !) :
		sshpass -p '}fQ%9J37a' rsync -ri * lg-rez@ssh-lg-rez.alwaysdata.net:~/www


Puis redémarrer le bot (depuis la Rez) :
	Depuis la Rez uniquement (réseau local) :
		sshpass -p 'pas d'inspi' ssh lg-rez@10.0.0.1 ./reboot_bot.sh

	OU (après avoir ajouté sa clé publique SSH  dans /home/lg-rez/.ssh/authorized_keys) :
		ssh lg-rez@82.226.127.88 ./reboot_bot.sh

	Pour Alwaysdata (maintenant INTERDIT !) :
		sshpass -p '}fQ%9J37a' ssh lg-rez@ssh-lg-rez.alwaysdata.net ./reboot_bot.sh


Pour redémarrer le panneau d'admin, utiliser le bouton ad hoc.


Petit script UNIX qui fait le taf pour enchaîner le tout (à distance avec accès SSH par clé publique configuré) :

#!/bin/bash

cd <racine des fichiers>
echo 'Transfert des fichiers...'

rsync -r -t -i Discord/* lg-rez@82.226.127.88:~/www/Discord
echo 'Fichiers transférés, reboot...'

ssh lg-rez@82.226.127.88 ./reboot_bot.sh
echo 'Rebooted!'




Idée d'organisation des salons :

v INFORMATION					visible : @everyone, écriture : Bot, MJs
    # bienvenue
    # règles
    # rôles

v L'ANTRE DES MJS				visible/écriture : Bot, MJs
    # bot						(pour partler avec le bot ou lui ordonner des actions)
    # logs						(écriture : Bot only, pour garder une trace de tout)
    # général
    #...

v CONVERSATION BOT				visible/écriture : {joueur concerné}, Bot, MJs
    # conv-bot-prenom-nom		(créé à l'inscription)
    #...

v CONVERSATIONS CAMPS			visibles/écriture : {joueurs concernés}, Bot, MJs
    # tanière-des-loups (?)
    # crypte-du-nécromancien
    # bureau-des-exorcistes

v BOUDOIRS						idem mais créés sur demande aux MJs (peut-être fusionner ?)
    # information-boudoirs		(sauf ce salon - visible : Joueurs inscrits, écriture : Bot, MJs)
    # mairie
    # pcc
    # la-rose-divoire

v PLACE DU VILLAGE				visibles : Joueurs inscrits, écriture : Joueurs en vie, Bot, MJs
    # annonces					(sauf ce salon en écriture : Bot, MJs)
    # haros
    # débats
    # spam


Idée d'organisation des rôles :

MJs (= Admins ?)
Bot
Maire (?)
Joueurs en vie
Joueurs morts
@everyone



Structure BDD :

-> table Joueurs
	discord_id 		nom		chambre		statut		role  	camp	votant_village	votant_loups		roleActif	_voteVillage	_voteMaire		_actionRole
	##												#

-> table Rôles
	role			camp			description		brief
	##

-> table Relations
	id random 		roleA 			roleB
	##				#				#

-> table BaseActions
	action			trigger_debut	trigger_fin		base_cooldown	type 	lieu	interactionNotaire		interactionGardien		Mage		params
	##

-> table Actions
	id random		joueur			action	cible    cible2		cooldown		charges    traité
	##				#				#																											{True, False}


du --si -hd 5 ~ | grep '^\s*[0-9\.]\+M' | sort -rn | sed '1d'
